name: CI/CD counter app

on:
  push:
    branches: [ Master ]

jobs:
#First we will see the application build or not , then we will deploy in EC2
  # build:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
    
    # - name: Build the docker_compose
    #   run: docker-compose up -d --build
      
    # - name: Buid the application
    #   run: docker-compose exec -T counter_app npm run build
    # - name: Installation
    #   run: |
    #     sudo snap install docker
    #     docker --version

  Deploy:
    # needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && sudo chmod 400 private_key
          sudo ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            #Now we have got the access of EC2 and we will start the deploy .
            ls 
            cd /home/ubuntu/test &&
            git clone https://github.com/smit-darji/s3-ec2-deployent.git
            cp Dockerfile /home/ubuntu/test
            cd s3-ec2-deployent
            
          '
          ssh-keygen -R hostname
          ls
          scp -i  private_key src/app.js ${USER_NAME}@${HOSTNAME}:/home/ubuntu/test/

# git checkout Master &&
      # git pull origin Master &&
      # git fetch --all &&
      # git reset --hard origin/Master &&
# docker-compose -f docker-compose.prod.yml up -d --build 